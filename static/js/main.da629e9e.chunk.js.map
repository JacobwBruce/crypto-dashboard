{"version":3,"sources":["App/AppLayout.js","App/AppProvider.jsx","App/AppBar.jsx","Shared/Styles.js","Settings/ConfirmButton.jsx","Settings/WelcomeMessage.jsx","Shared/Page.jsx","Shared/Tile.js","Settings/CoinHeaderGrid.jsx","Shared/CoinImage.jsx","Settings/CoinTile.jsx","Settings/CoinGrid.jsx","Settings/Search.jsx","Settings/ThemeToggle.jsx","Settings/index.js","Shared/Content.jsx","Dashboard/PriceTile.jsx","Dashboard/PriceGrid.jsx","Dashboard/CoinSpotlight.jsx","Dashboard/HighchartsConfig.js","Dashboard/ChartSelect.js","Dashboard/HighchartsTheme.js","Dashboard/PriceChart.jsx","Dashboard/index.js","App/index.js","serviceWorker.js","index.js"],"names":["style","div","cc","setApiKey","AppContext","React","createContext","AppProvider","props","getTheme","theme","localStorage","getItem","setItem","changeTheme","newTheme","state","window","location","reload","addCoin","key","favorites","length","push","setState","removeCoin","_","pull","componentDidMount","fetchCoins","fetchPrices","fetchHistorical","a","coinList","Data","firstVisit","prices","filter","price","Object","keys","historical","results","name","currentFavorite","data","map","ticker","index","moment","subtract","timeInterval","valueOf","USD","promises","units","priceHistorical","toDate","Promise","all","returnData","fav","priceFull","priceData","console","error","isInFavorites","includes","confirmFavorites","page","JSON","stringify","setCurrentFavorite","sym","parse","setPage","setFilteredCoins","filteredCoins","changeChartSelect","value","savedSettings","cryptoDashData","Provider","this","children","Component","Logo","styled","Bar","ControlButtonElement","active","css","hidden","ControlButton","Consumer","onClick","AppBar","lightTheme","color","color2","color3","document","body","background","lightBlueBackground","backgroundColor2","subtleBoxShadow","greenBoxShadow","ConfirmButtonStyled","CenterDiv","ConfirmButton","Page","Tile","SelectableTile","DeletableTile","DisabledTile","CoinHeaderGridStyled","CoinSymbol","DeleteIcon","CoinHeaderGrid","symbol","topSection","CoinImage","img","spotlight","coin","alt","src","ImageUrl","clickCoinHandler","coinKey","CoinTile","TileClass","CoinName","Symbol","CoinGridStyled","getCoinsToDisplay","slice","getLowerSectionCoins","CoinGrid","SearchGrid","SearchInput","input","handleFilter","debounce","inputValue","coinSymbols","coinNames","allStringsToSearch","concat","fuzzyResults","fuzzy","result","string","pickBy","symKey","coinName","Search","onKeyUp","e","target","filterCoins","ThemeToggle","className","type","defaultChecked","WelcomeMessage","Content","JustifyRight","JustifyLeft","TickerPrice","ChangePct","red","numberFormat","number","PriceTileStyled","compact","ChangePercentage","CHANGEPCT24HOUR","PriceTile","PRICE","PriceTileCompact","PriceGrid","SpotlightName","h2","CoinSpotlight","title","text","yAxis","xAxis","legend","layout","align","verticalAlign","plotOptions","series","label","connectorAllowed","pointStart","responsive","rules","condition","maxWidth","chartOptions","select","colors","chart","backgroundColor","borderColor","borderWidth","plotBackgroundColor","plotBorderWidth","font","subtitle","gridLineColor","gridLineWidth","labels","lineColor","tickColor","fontWeight","fontSize","fontFamily","minorTickInterval","tickWidth","tooltip","toolbar","itemStyle","line","dataLabels","marker","spline","scatter","candlestick","itemHoverStyle","itemHiddenStyle","credits","enabled","navigation","buttonOptions","symbolStroke","hoverSymbolStroke","fill","linearGradient","x1","y1","x2","y2","stops","stroke","rangeSelector","buttonTheme","states","hover","inputStyle","labelStyle","navigator","handles","outlineColor","maskFill","scrollbar","barBackgroundColor","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","rifleColor","trackBackgroundColor","trackBorderColor","legendBackgroundColor","background2","dataLabelsColor","textColor","maskColor","PriceChart","ChartSelect","defaultValue","onChange","config","highchartsConfig","ReactHighcharts","Highcharts","setOptions","HighchartsTheme","ChartGrid","App","AppLayout","Settings","Dashboard","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"+WAEeA,UAAMC,IAArB,K,sICEAC,IAAGC,UAAU,oEAEN,IAAMC,EAAaC,IAAMC,gBAKnBC,EAAb,kDACI,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAmBVC,SAAW,WACP,IAAMC,EAAQC,aAAaC,QAAQ,SACnC,OAAKF,IACDC,aAAaE,QAAQ,QAAS,QACvB,SAxBI,EA6BnBC,YAAc,WACV,IAAMC,EAAgC,UAArB,EAAKC,MAAMN,MAAoB,OAAS,QACzDC,aAAaE,QAAQ,QAASE,GAC9BE,OAAOC,SAASC,UAhCD,EAmCnBC,QAAU,SAACC,GACP,IAAIC,EAAS,YAAO,EAAKN,MAAMM,WAC3BA,EAAUC,OAzCA,KA0CVD,EAAUE,KAAKH,GACf,EAAKI,SAAS,CAAEH,gBAvCL,EA2CnBI,WAAa,SAACL,GACV,IAAIC,EAAS,YAAO,EAAKN,MAAMM,WAC/B,EAAKG,SAAS,CAAEH,UAAWK,IAAEC,KAAKN,EAAWD,MA7C9B,EAgDnBQ,kBAAoB,WAChB,EAAKC,aACL,EAAKC,cACL,EAAKC,mBAnDU,EAsDnBF,WAtDmB,sBAsDN,4BAAAG,EAAA,sEACa/B,IAAGgC,WADhB,OACLA,EADK,OAC4BC,KACrC,EAAKV,SAAS,CAAES,aAFP,2CAtDM,EA2DnBH,YA3DmB,sBA2DL,4BAAAE,EAAA,0DACN,EAAKjB,MAAMoB,WADL,iEAES,EAAKC,SAFd,OAGVA,GADIA,EAFM,QAGMC,QAAO,SAACC,GAAD,OAAWC,OAAOC,KAAKF,GAAOhB,UACrD,EAAKE,SAAS,CAAEY,WAJN,2CA3DK,EAkEnBL,gBAlEmB,sBAkED,8BAAAC,EAAA,0DACV,EAAKjB,MAAMoB,WADD,iEAEM,EAAKM,aAFX,OAEVC,EAFU,OAGVD,EAAa,CACb,CACIE,KAAM,EAAK5B,MAAM6B,gBACjBC,KAAMH,EAAQI,KAAI,SAACC,EAAQC,GAAT,MAAmB,CACjCC,MACKC,SADL,eACiB,EAAKnC,MAAMoC,aA7E7B,GA6EyDH,IACnDI,UACLL,EAAOM,UAInB,EAAK7B,SAAS,CAAEiB,eAdF,2CAlEC,EAmFnBA,WAAa,WAET,IADA,IAAIa,EAAW,GACNC,EAxFE,GAwFkBA,EAAQ,EAAGA,IACpCD,EAAS/B,KACLtB,IAAGuD,gBACC,EAAKzC,MAAM6B,gBACX,CAAC,OACDK,MACKC,SADL,eACiB,EAAKnC,MAAMoC,aAAeI,IACtCE,WAIjB,OAAOC,QAAQC,IAAIL,IAhGJ,EAmGnBlB,OAnGmB,sBAmGV,oCAAAJ,EAAA,sDACD4B,EAAa,GADZ,cAEW,EAAK7C,MAAMM,WAFtB,gEAEIwC,EAFJ,0BAIyB5D,IAAG6D,UAAUD,EAAK,OAJ3C,OAIOE,EAJP,OAKGH,EAAWrC,KAAKwC,GALnB,kDAOGC,QAAQC,MAAM,sBAAd,MAPH,wKAUEL,GAVF,uEAnGU,EAgHnBM,cAAgB,SAAC9C,GAAD,OAASM,IAAEyC,SAAS,EAAKpD,MAAMM,UAAWD,IAhHvC,EAkHnBgD,iBAAmB,WACf,IAAIxB,EAAkB,EAAK7B,MAAMM,UAAU,GAC3C,EAAKG,SACD,CACIW,YAAY,EACZkC,KAAM,YACNzB,kBACAR,OAAQ,KACRK,WAAY,OAEhB,WACI,EAAKX,cACL,EAAKC,qBAGbrB,aAAaE,QACT,aACA0D,KAAKC,UAAU,CACXlD,UAAW,EAAKN,MAAMM,UACtBuB,sBArIO,EA0InB4B,mBAAqB,SAACC,GAClB,EAAKjD,SAAS,CAAEoB,gBAAiB6B,EAAKhC,WAAY,MAAQ,EAAKV,iBAC/DrB,aAAaE,QACT,aACA0D,KAAKC,UAAL,2BACOD,KAAKI,MAAMhE,aAAaC,QAAQ,gBADvC,IAEIiC,gBAAiB6B,OAhJV,EA8JnBE,QAAU,SAACN,GAAD,OAAU,EAAK7C,SAAS,CAAE6C,UA9JjB,EAgKnBO,iBAAmB,SAACC,GAAD,OAAmB,EAAKrD,SAAS,CAAEqD,mBAhKnC,EAkKnBC,kBAAoB,SAACC,GACjB,EAAKvD,SAAS,CAAE2B,aAAc4B,EAAOtC,WAAY,MAAQ,EAAKV,kBAjK9D,EAAKhB,MAAL,yBACIsD,KAAM,YACNhD,UAAW,CAAC,MAAO,MAAO,MAAO,QACjC8B,aAAc,SACd1C,MAAO,EAAKD,YACT,EAAKwE,iBALZ,IAMIL,QAAS,EAAKA,QACdxD,QAAS,EAAKA,QACdM,WAAY,EAAKA,WACjByC,cAAe,EAAKA,cACpBE,iBAAkB,EAAKA,iBACvBQ,iBAAkB,EAAKA,iBACvBJ,mBAAoB,EAAKA,mBACzBM,kBAAmB,EAAKA,kBACxBjE,YAAa,EAAKA,cAhBP,EADvB,4DAuJQ,IAAMoE,EAAiBX,KAAKI,MAAMhE,aAAaC,QAAQ,eACvD,OAAKsE,EAIE,CAAE5D,UAD4B4D,EAA/B5D,UACcuB,gBADiBqC,EAApBrC,iBAFN,CAAEyB,KAAM,WAAYlC,YAAY,KAzJnD,+BAwKQ,OAAO,kBAAChC,EAAW+E,SAAZ,CAAqBH,MAAOI,KAAKpE,OAAQoE,KAAK5E,MAAM6E,cAxKnE,GAAiChF,IAAMiF,W,0nBCPvC,IAAMC,EAAOC,IAAOvF,IAAV,KAIJwF,EAAMD,IAAOvF,IAAV,KAMHyF,EAAuBF,IAAOvF,IAAV,KAEpB,SAACO,GAAD,OACEA,EAAMmF,QACNC,YADA,QAKF,SAACpF,GAAD,OACEA,EAAMqF,QACND,YADA,QAMR,SAASE,EAAT,GAA0C,IAAjBlD,EAAgB,EAAhBA,KAAgB,EAAV+C,OAC3B,OACI,kBAACvF,EAAW2F,SAAZ,MACK,gBAAGzB,EAAH,EAAGA,KAAMM,EAAT,EAASA,QAASxC,EAAlB,EAAkBA,WAAlB,OACG,kBAACsD,EAAD,CACIC,OAAQrB,IAAS1B,EACjBoD,QAAS,kBAAMpB,EAAQhC,IACvBiD,OAAQzD,GAAuB,cAATQ,GAErBA,MAON,SAASqD,IACpB,OACI,kBAACR,EAAD,KACI,kBAACF,EAAD,mBACA,8BACA,kBAACO,EAAD,CAAelD,KAAK,cACpB,kBAACkD,EAAD,CAAelD,KAAK,cClDhC,IACasD,EAAuB,UADtBvF,aAAaC,QAAQ,SAGtBuF,EAAQD,EAAa,QAAU,UAC/BE,EAASF,EAAa,QAAU,UAChCG,EAASH,EAAa,UAAY,UAE3CA,IACAI,SAASC,KAAKvG,MAAMwG,WAAa,UACjCF,SAASC,KAAKvG,MAAMmG,MAAQ,WAGzB,IAAMM,EAAmB,4BAAwBN,GAC3CO,EAAgB,4BAAwBN,EAAxB,KAKhBO,GAJoB,4BAAwBN,EAAxB,KAIL,sCAAkCH,EAAa,UAAY,YAC1EU,EAAc,sC,wTCf3B,IAAMC,EAAsBrB,IAAOvF,IAAV,IAEZoG,EDiBY,oBCZfO,GAIGE,EAAYtB,IAAOvF,IAAV,KAKP,SAAS8G,IACpB,OACI,kBAAC3G,EAAW2F,SAAZ,MACK,gBAAG1B,EAAH,EAAGA,iBAAH,OACG,kBAACyC,EAAD,KACI,kBAACD,EAAD,CAAqBb,QAAS3B,GAA9B,yBCvBL,kBAA0B,EAAdjC,WACvB,OACI,kBAAChC,EAAW2F,SAAZ,MACK,qBAAG3D,WAEI,iGAAuE,IACvE,SCNL,SAAS4E,GAAT,GAAmC,IAAnBpE,EAAkB,EAAlBA,KAAMyC,EAAY,EAAZA,SACjC,OACI,kBAACjF,EAAW2F,SAAZ,MACK,YACG,OADW,EAAXzB,OACa1B,EACF,KAEJ,6BAAMyC,M,ofCFtB,IAAM4B,GAAOzB,IAAOvF,IAAV,KACX0G,EACAF,GAIOS,GAAiB1B,YAAOyB,GAAPzB,CAAH,KAGjBoB,GAIGO,GAAgB3B,YAAO0B,GAAP1B,CAAH,KJAD,uCIOZ4B,GAAe5B,YAAOyB,GAAPzB,CAAH,M,oaCxBlB,IAAM6B,GAAuB7B,IAAOvF,IAAV,MAKpBqH,GAAa9B,IAAOvF,IAAV,MAIjBsH,GAAa/B,IAAOvF,IAAV,KAGVkH,IAMS,SAASK,GAAT,GAAuD,IAA7B5E,EAA4B,EAA5BA,KAAM6E,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,WACnD,OACI,kBAACL,GAAD,KACI,6BAAMzE,GACL8E,EAAa,kBAACH,GAAD,UAA6B,kBAACD,GAAD,SAAcG,EAAd,M,0QCvBvD,IAAME,GAAYnC,IAAOoC,IAAV,MAET,SAACpH,GAAD,OACEA,EAAMqH,WACNjC,YADA,SAQO,eAAgC,IAApBkC,EAAmB,EAAnBA,KAAMD,EAAa,EAAbA,UAC7B,OACI,kBAACF,GAAD,CACIE,UAAWA,EACXE,IAAKD,EAAKR,WACVU,IAAG,oCAA+BF,EAAKG,aCbnD,SAASC,GAAiBR,EAAYS,EAAS/G,EAASM,GACpD,OAAOgG,EACD,WACIhG,EAAWyG,IAEf,WACI/G,EAAQ+G,IAIP,SAASC,GAAT,GAA4C,IAAxBD,EAAuB,EAAvBA,QAAST,EAAc,EAAdA,WACxC,OACI,kBAACtH,EAAW2F,SAAZ,MACK,YAAuD,IAApD7D,EAAmD,EAAnDA,SAAUd,EAAyC,EAAzCA,QAASM,EAAgC,EAAhCA,WAAYyC,EAAoB,EAApBA,cACzB2D,EAAO5F,EAASiG,GAClBE,EAAYnB,GAMhB,OALIQ,EACAW,EAAYlB,GACLhD,EAAcgE,KACrBE,EAAYjB,IAGZ,kBAACiB,EAAD,CAAWrC,QAASkC,GAAiBR,EAAYS,EAAS/G,EAASM,IAC/D,kBAAC8F,GAAD,CACIE,WAAYA,EACZ9E,KAAMkF,EAAKQ,SACXb,OAAQK,EAAKS,SAEjB,kBAAC,GAAD,CAAWT,KAAMA,Q,4MC7BlC,IAAMU,GAAiBhD,IAAOvF,IAAV,MAW3B,SAASwI,GAAkBvG,EAAUwF,EAAYpG,EAAWwD,GACxD,OAAO4C,EAAapG,EALxB,SAA8BwD,EAAe5C,GACzC,OAAQ4C,GAAiBtC,OAAOC,KAAKqC,IAAmBtC,OAAOC,KAAKP,GAAUwG,MAAM,EAAG,KAIvDC,CAAqB7D,EAAe5C,GAGzD,SAAS0G,GAAT,GAAmC,IAAflB,EAAc,EAAdA,WAC/B,OACI,kBAACtH,EAAW2F,SAAZ,MACK,gBAAG7D,EAAH,EAAGA,SAAUZ,EAAb,EAAaA,UAAWwD,EAAxB,EAAwBA,cAAxB,OACG,kBAAC0D,GAAD,KACKC,GAAkBvG,EAAUwF,EAAYpG,EAAWwD,GAAe/B,KAC/D,SAACoF,GAAD,OACI,kBAACC,GAAD,CAAU/G,IAAK8G,EAAST,WAAYA,EAAYS,QAASA,GACpDA,U,uVCrBjC,IAAMU,GAAarD,IAAOvF,IAAV,MAKV6I,GAActD,IAAOuD,MAAV,KACXrC,ETYmB,oBSJnBsC,GAAerH,IAAEsH,UAAS,SAACC,EAAYhH,EAAU2C,GAEnD,IAAIsE,EAAc3G,OAAOC,KAAKP,GAE1BkH,EAAYD,EAAYpG,KAAI,SAAC2B,GAAD,OAASxC,EAASwC,GAAK4D,YACnDe,EAAqBF,EAAYG,OAAOF,GACxCG,EAAeC,KACdlH,OAAO4G,EAAYG,EAAoB,IACvCtG,KAAI,SAAC0G,GAAD,OAAYA,EAAOC,UAO5B7E,EALsBlD,IAAEgI,OAAOzH,GAAU,SAACuH,EAAQG,GAC9C,IAAMC,EAAWJ,EAAOnB,SACxB,OAAO3G,IAAEyC,SAASmF,EAAcK,IAAWjI,IAAEyC,SAASmF,EAAcM,SAIzE,KAWY,SAASC,KACpB,OACI,kBAAC1J,EAAW2F,SAAZ,MACK,gBAAGlB,EAAH,EAAGA,iBAAkB3C,EAArB,EAAqBA,SAArB,OACG,kBAAC2G,GAAD,KACI,gDACA,kBAACC,GAAD,CAAaiB,QAAS,SAACC,GAAD,OAf1C,SAAqBA,EAAGnF,EAAkB3C,GACtC,IAAIgH,EAAac,EAAEC,OAAOjF,MACrBkE,EAILF,GAAaE,EAAYhH,EAAU2C,GAH/BA,EAAiB,MAYwBqF,CAAYF,EAAGnF,EAAkB3C,U,MClDnE,SAASiI,KACpB,OACI,kBAAC/J,EAAW2F,SAAZ,MACK,gBAAGjF,EAAH,EAAGA,YAAaJ,EAAhB,EAAgBA,MAAhB,OACG,6BACI,yBAAK0J,UAAU,eAAf,gBACA,2BAAOA,UAAU,UACb,2BACIC,KAAK,WACLrE,QAASlF,EACTwJ,eAA0B,SAAV5J,IAEpB,0BAAM0J,UAAU,gBCRzB,kBACX,OACI,kBAACpD,GAAD,CAAMpE,KAAK,YACP,kBAAC2H,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC3B,GAAD,CAAUlB,YAAU,IACpB,kBAACX,EAAD,MACA,kBAAC+C,GAAD,MACA,kBAAClB,GAAD,QCbG,SAAS4B,GAAQhK,GAC5B,OACI,kBAACJ,EAAW2F,SAAZ,MACK,YAAuC,IAApC7D,EAAmC,EAAnCA,SAAUG,EAAyB,EAAzBA,OAAQD,EAAiB,EAAjBA,WAClB,OAAKF,EACAE,GAAeC,EACb,6BAAM7B,EAAM6E,UADgB,+CADb,iD,47BCAtC,IAAMoF,GAAejF,IAAOvF,IAAV,MAIZyK,GAAclF,IAAOvF,IAAV,MAIX0K,GAAcnF,IAAOvF,IAAV,KbQU,kBaJrB2K,GAAYpF,IAAOvF,IAAV,MAET,SAACO,GAAD,OACEA,EAAMqK,KACNjF,YADA,SAMFkF,GAAe,SAACC,GAClB,QAASA,EAAS,IAAIrC,MAAM,EAAG,IAG7BsC,GAAkBxF,YAAO0B,GAAP1B,CAAH,MACf,SAAChF,GAAD,OACEA,EAAMyK,SACNrF,YADA,KbRiB,uBaiBnB,SAACpF,GAAD,OACEA,EAAMqC,iBACN+C,YADA,KAEMgB,MAKd,SAASsE,GAAT,GAAqC,IAATpI,EAAQ,EAARA,KACxB,OACI,kBAAC2H,GAAD,KACI,kBAACG,GAAD,CAAWC,IAAK/H,EAAKqI,gBAAkB,GAClCL,GAAahI,EAAKqI,iBADvB,MAOZ,SAASC,GAAT,GAAwE,IAAnD1G,EAAkD,EAAlDA,IAAK5B,EAA6C,EAA7CA,KAAMD,EAAuC,EAAvCA,gBAAiB4B,EAAsB,EAAtBA,mBAC7C,OACI,kBAACuG,GAAD,CAAiBhF,QAASvB,EAAoB5B,gBAAiBA,GAC3D,kBAACwE,GAAD,KACI,6BAAM3C,GACN,kBAACwG,GAAD,CAAkBpI,KAAMA,KAE5B,kBAAC6H,GAAD,SAAeG,GAAahI,EAAKuI,SAK7C,SAASC,GAAT,GAA+E,IAAnD5G,EAAkD,EAAlDA,IAAK5B,EAA6C,EAA7CA,KAAMD,EAAuC,EAAvCA,gBAAiB4B,EAAsB,EAAtBA,mBACpD,OACI,kBAACuG,GAAD,CAAiBhF,QAASvB,EAAoBwG,SAAO,EAACpI,gBAAiBA,GACnE,kBAAC6H,GAAD,KAAchG,GACd,kBAACwG,GAAD,CAAkBpI,KAAMA,IACxB,iCAAOgI,GAAahI,EAAKuI,SAKtB,mBAA6B,IAAjB9I,EAAgB,EAAhBA,MAAOU,EAAS,EAATA,MAC1ByB,EAAMlC,OAAOC,KAAKF,GAAO,GACzBO,EAAOP,EAAMmC,GAAN,IACP2D,EAAYpF,EAAQ,EAAImI,GAAYE,GACxC,OACI,kBAAClL,EAAW2F,SAAZ,MACK,gBAAGlD,EAAH,EAAGA,gBAAiB4B,EAApB,EAAoBA,mBAApB,OACG,kBAAC4D,EAAD,CACI3D,IAAKA,EACL5B,KAAMA,EACND,gBAAiBA,IAAoB6B,EACrCD,mBAAoB,kBAAMA,EAAmBC,KAE5CA,EANL,IAMW5B,EAAKuI,W,qLC3FhC,IAAME,GAAY/F,IAAOvF,IAAV,MAOA,cACX,OACI,kBAACG,EAAW2F,SAAZ,MACK,gBAAG1D,EAAH,EAAGA,OAAH,OACG,kBAACkJ,GAAD,KACKlJ,EAAOU,KAAI,SAACR,EAAOU,GAAR,OACR,kBAAC,GAAD,CAAW5B,IAAKmB,OAAOC,KAAKF,GAAQA,MAAOA,EAAOU,MAAOA,Y,kGCZjF,IAAMuI,GAAgBhG,IAAOiG,GAAV,MAIJ,SAASC,KACpB,OACI,kBAACtL,EAAW2F,SAAZ,MACK,gBAAGlD,EAAH,EAAGA,gBAAiBX,EAApB,EAAoBA,SAApB,OACG,kBAAC+E,GAAD,KACI,kBAACuE,GAAD,KAAgBtJ,EAASW,GAAiByF,UAC1C,kBAAC,GAAD,CAAWT,WAAS,EAACC,KAAM5F,EAASW,SChBzC,gBAAUH,GACrB,MAAO,CACHiJ,MAAO,CACHC,KAAM,IAGVC,MAAO,CACHF,MAAO,CACHC,KAAM,UAIdE,MAAO,CACHzB,KAAM,YAGV0B,OAAQ,CACJC,OAAQ,WACRC,MAAO,QACPC,cAAe,UAGnBC,YAAa,CACTC,OAAQ,CACJC,MAAO,CACHC,kBAAkB,GAEtBC,WAAY,OAIpBH,OAAQ1J,EAER8J,WAAY,CACRC,MAAO,CAAC,CACJC,UAAW,CACPC,SAAU,KAEdC,aAAc,CACVb,OAAQ,CACJC,OAAQ,aACRC,MAAO,SACPC,cAAe,gB,mMCtCxB1G,WAAOqH,OAAtB,KACMnG,EjBoBmB,oBkBvBV,IACboG,OAAQ,CACN,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFC,MAAO,CACLC,gBAAiB9G,EAAa,QAAU,UACxC+G,YAAa,UACbC,YAAa,EACb9C,UAAW,iBACX+C,oBAAqBjH,EAAa,QAAU,UAC5CkH,gBAAiB,GAEnBzB,MAAO,CACL3L,MAAO,CACLmG,MAAO,UACPkH,KAAM,kDAGVC,SAAU,CACRtN,MAAO,CACLmG,MAAO,UACPkH,KAAM,kDAGVvB,MAAO,CACLyB,cAAe,UACfC,cAAe,EACfC,OAAQ,CACNzN,MAAO,CACLmG,MAAO,YAGXuH,UAAW,UACXC,UAAW,UACXhC,MAAO,CACL3L,MAAO,CACLmG,MAAO,OACPyH,WAAY,OACZC,SAAU,OACVC,WAAY,uCAKlBjC,MAAO,CACL2B,cAAe,EACfD,cAAe,UACfE,OAAQ,CACNzN,MAAO,CACLmG,MAAO,YAGXuH,UAAW,UACXK,kBAAmB,KACnBJ,UAAW,UACXK,UAAW,EACXrC,MAAO,CACL3L,MAAO,CACLmG,MAAO,OACPyH,WAAY,OACZC,SAAU,OACVC,WAAY,uCAIlBG,QAAS,CACPjB,gBAAiB,sBACjBhN,MAAO,CACLmG,MAAO,YAGX+H,QAAS,CACPC,UAAW,CACThI,MAAO,WAGXgG,YAAa,CACXiC,KAAM,CACJC,WAAY,CACVlI,MAAO,QAETmI,OAAQ,CACNZ,UAAW,SAGfa,OAAQ,CACND,OAAQ,CACNZ,UAAW,SAGfc,QAAS,CACPF,OAAQ,CACNZ,UAAW,SAGfe,YAAa,CACXf,UAAW,UAGf3B,OAAQ,CACNoC,UAAW,CACTd,KAAM,wCACNlH,MAAO,WAETuI,eAAgB,CACdvI,MAAO,QAETwI,gBAAiB,CACfxI,MAAO,SAGXyI,QAAS,CACPC,SAAS,GAEXpB,OAAQ,CACNzN,MAAO,CACLmG,MAAO,SAIX2I,WAAY,CACVC,cAAe,CACbC,aAAc,UACdC,kBAAmB,UACnBvO,MAAO,CACLwO,KAAM,CACJC,eAAgB,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC3CC,MAAO,CACL,CAAC,GAAK,WACN,CAAC,GAAK,aAGVC,OAAQ,aAMdC,cAAe,CACbC,YAAa,CACXT,KAAM,CACJC,eAAgB,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC3CC,MAAO,CACL,CAAC,GAAK,QACN,CAAC,GAAK,UAGVC,OAAQ,UACRzP,MAAO,CACLmG,MAAO,OACPyH,WAAY,QAEdgC,OAAQ,CACNC,MAAO,CACLX,KAAM,CACJC,eAAgB,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC3CC,MAAO,CACL,CAAC,GAAK,QACN,CAAC,GAAK,UAGVC,OAAQ,UACRzP,MAAO,CACLmG,MAAO,UAGX0G,OAAQ,CACNqC,KAAM,CACJC,eAAgB,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC3CC,MAAO,CACL,CAAC,GAAK,QACN,CAAC,GAAK,UAGVC,OAAQ,UACRzP,MAAO,CACLmG,MAAO,aAKf2J,WAAY,CACV9C,gBAAiB,OACjB7G,MAAO,UAET4J,WAAY,CACV5J,MAAO,WAIX6J,UAAW,CACTC,QAAS,CACPjD,gBAAiB,OACjBC,YAAa,QAEfiD,aAAc,OACdC,SAAU,wBACV/D,OAAQ,CACNjG,MAAO,UACPuH,UAAW,YAIf0C,UAAW,CACTC,mBAAoB,CAClBlB,eAAgB,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC3CC,MAAO,CACL,CAAC,GAAK,QACN,CAAC,GAAK,UAGVc,eAAgB,OAChBC,iBAAkB,OAClBC,sBAAuB,CACrBrB,eAAgB,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC3CC,MAAO,CACL,CAAC,GAAK,QACN,CAAC,GAAK,UAGViB,kBAAmB,OACnBC,WAAY,OACZC,qBAAsB,CACpBxB,eAAgB,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC3CC,MAAO,CACL,CAAC,EAAG,QACJ,CAAC,EAAG,UAGRoB,iBAAkB,QAIpBC,sBAAuB,qBACvBC,YAAa,kBACbC,gBAAiB,OACjBC,UAAW,UACXC,UAAW,yBC7OE,SAASC,KACpB,OACI,kBAAC9Q,EAAW2F,SAAZ,MACK,gBAAGrD,EAAH,EAAGA,WAAYqC,EAAf,EAAeA,kBAAf,OACG,kBAACkC,GAAD,KACI,kBAACkK,GAAD,CACIC,aAAc,SACdC,SAAU,SAACrH,GAAD,OAAOjF,EAAkBiF,EAAEC,OAAOjF,SAE5C,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,UAAd,WAEHtC,EACG,kBAAC,KAAD,CAAiB4O,OAAQC,GAAiB7O,KAE1C,4D,8KAlBxB8O,KAAgBC,WAAWC,WAAWC,ICAtC,IAAMC,GAAYpM,IAAOvF,IAAV,MAOA,cACX,OACI,kBAAC+G,GAAD,CAAMpE,KAAK,aACP,kBAAC,GAAD,MACA,kBAACgP,GAAD,KACI,kBAAClG,GAAD,MACA,kBAACwF,GAAD,SCGDW,OAdf,WACE,OACE,kBAACC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC7L,EAAD,MACA,kBAACuE,GAAD,KACE,kBAACuH,GAAD,MACA,kBAACC,GAAD,UCJUC,QACW,cAA7BhR,OAAOC,SAASgR,UAEe,UAA7BjR,OAAOC,SAASgR,UAEhBjR,OAAOC,SAASgR,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFhM,SAASiM,eAAe,SDyHpB,kBAAmBvC,WACrBA,UAAUwC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA3O,GACLD,QAAQC,MAAMA,EAAM4O,c","file":"static/js/main.da629e9e.chunk.js","sourcesContent":["import style from 'styled-components';\n\nexport default style.div`\n    padding: 40px;\n`;","import React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport cc from 'cryptocompare';\ncc.setApiKey('dc7f79f0e7cb6eb2b4d6d8542e5d2845eb3204b6e20ed56d1f86722490714c05');\n\nexport const AppContext = React.createContext();\n\nconst MAX_FAVORITES = 10;\nconst TIME_UNITS = 10;\n\nexport class AppProvider extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            page: 'Dashboard',\n            favorites: ['BTC', 'ETH', 'XMR', 'DOGE'],\n            timeInterval: 'months',\n            theme: this.getTheme(),\n            ...this.savedSettings(),\n            setPage: this.setPage,\n            addCoin: this.addCoin,\n            removeCoin: this.removeCoin,\n            isInFavorites: this.isInFavorites,\n            confirmFavorites: this.confirmFavorites,\n            setFilteredCoins: this.setFilteredCoins,\n            setCurrentFavorite: this.setCurrentFavorite,\n            changeChartSelect: this.changeChartSelect,\n            changeTheme: this.changeTheme,\n        };\n    }\n\n    getTheme = () => {\n        const theme = localStorage.getItem('theme');\n        if (!theme) {\n            localStorage.setItem('theme', 'dark');\n            return 'dark';\n        }\n        return theme;\n    };\n\n    changeTheme = () => {\n        const newTheme = this.state.theme === 'light' ? 'dark' : 'light';\n        localStorage.setItem('theme', newTheme);\n        window.location.reload();\n    };\n\n    addCoin = (key) => {\n        let favorites = [...this.state.favorites];\n        if (favorites.length < MAX_FAVORITES) {\n            favorites.push(key);\n            this.setState({ favorites });\n        }\n    };\n\n    removeCoin = (key) => {\n        let favorites = [...this.state.favorites];\n        this.setState({ favorites: _.pull(favorites, key) });\n    };\n\n    componentDidMount = () => {\n        this.fetchCoins();\n        this.fetchPrices();\n        this.fetchHistorical();\n    };\n\n    fetchCoins = async () => {\n        let coinList = (await cc.coinList()).Data;\n        this.setState({ coinList });\n    };\n\n    fetchPrices = async () => {\n        if (this.state.firstVisit) return;\n        let prices = await this.prices();\n        prices = prices.filter((price) => Object.keys(price).length);\n        this.setState({ prices });\n    };\n\n    fetchHistorical = async () => {\n        if (this.state.firstVisit) return;\n        let results = await this.historical();\n        let historical = [\n            {\n                name: this.state.currentFavorite,\n                data: results.map((ticker, index) => [\n                    moment()\n                        .subtract({ [this.state.timeInterval]: TIME_UNITS - index })\n                        .valueOf(),\n                    ticker.USD,\n                ]),\n            },\n        ];\n        this.setState({ historical });\n    };\n\n    historical = () => {\n        let promises = [];\n        for (let units = TIME_UNITS; units > 0; units--) {\n            promises.push(\n                cc.priceHistorical(\n                    this.state.currentFavorite,\n                    ['USD'],\n                    moment()\n                        .subtract({ [this.state.timeInterval]: units })\n                        .toDate()\n                )\n            );\n        }\n        return Promise.all(promises);\n    };\n\n    prices = async () => {\n        let returnData = [];\n        for (let fav of this.state.favorites) {\n            try {\n                let priceData = await cc.priceFull(fav, 'USD');\n                returnData.push(priceData);\n            } catch (err) {\n                console.error('Fetch price error: ', err);\n            }\n        }\n        return returnData;\n    };\n\n    isInFavorites = (key) => _.includes(this.state.favorites, key);\n\n    confirmFavorites = () => {\n        let currentFavorite = this.state.favorites[0];\n        this.setState(\n            {\n                firstVisit: false,\n                page: 'Dashboard',\n                currentFavorite,\n                prices: null,\n                historical: null,\n            },\n            () => {\n                this.fetchPrices();\n                this.fetchHistorical();\n            }\n        );\n        localStorage.setItem(\n            'cryptoDash',\n            JSON.stringify({\n                favorites: this.state.favorites,\n                currentFavorite,\n            })\n        );\n    };\n\n    setCurrentFavorite = (sym) => {\n        this.setState({ currentFavorite: sym, historical: null }, this.fetchHistorical);\n        localStorage.setItem(\n            'cryptoDash',\n            JSON.stringify({\n                ...JSON.parse(localStorage.getItem('cryptoDash')),\n                currentFavorite: sym,\n            })\n        );\n    };\n\n    savedSettings() {\n        const cryptoDashData = JSON.parse(localStorage.getItem('cryptoDash'));\n        if (!cryptoDashData) {\n            return { page: 'Settings', firstVisit: true };\n        }\n        let { favorites, currentFavorite } = cryptoDashData;\n        return { favorites, currentFavorite };\n    }\n\n    setPage = (page) => this.setState({ page });\n\n    setFilteredCoins = (filteredCoins) => this.setState({ filteredCoins });\n\n    changeChartSelect = (value) => {\n        this.setState({ timeInterval: value, historical: null }, this.fetchHistorical);\n    };\n\n    render() {\n        return <AppContext.Provider value={this.state}>{this.props.children}</AppContext.Provider>;\n    }\n}\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { AppContext } from './AppProvider';\n\nconst Logo = styled.div`\n    font-size: 1.5rem;\n`;\n\nconst Bar = styled.div`\n    display: grid;\n    margin-bottom: 40px;\n    grid-template-columns: 180px auto 100px 100px;\n`;\n\nconst ControlButtonElement = styled.div`\n    cursor: pointer;\n    ${(props) =>\n        props.active &&\n        css`\n            text-shadow: 0px 0px 60px #03ff03;\n            color: red;\n        `}\n    ${(props) =>\n        props.hidden &&\n        css`\n            display: none;\n        `}\n`;\n\nfunction ControlButton({ name, active }) {\n    return (\n        <AppContext.Consumer>\n            {({ page, setPage, firstVisit }) => (\n                <ControlButtonElement\n                    active={page === name}\n                    onClick={() => setPage(name)}\n                    hidden={firstVisit && name === 'Dashboard'}\n                >\n                    {name}\n                </ControlButtonElement>\n            )}\n        </AppContext.Consumer>\n    );\n}\n\nexport default function AppBar() {\n    return (\n        <Bar>\n            <Logo>CryptoDash</Logo>\n            <div />\n            <ControlButton name='Dashboard' />\n            <ControlButton name='Settings' />\n        </Bar>\n    );\n}\n","\nconst theme = localStorage.getItem('theme');\nexport const lightTheme = theme === 'light';\n\nexport const color = lightTheme ? 'white' : '#061a44';\nexport const color2 = lightTheme ? 'white' : '#010e2c';\nexport const color3 = lightTheme ? '#09f010' : '#42ff3a';\n\nif (lightTheme) {\n    document.body.style.background = '#e1eaee';\n    document.body.style.color = '#061a44';\n}\n\nexport const lightBlueBackground = `background-color: ${color}`;\nexport const backgroundColor2 = `background-color: ${color2};`;\nexport const greenBackgroundColor = `background-color: ${color3};`;\n\nexport const fontColorGreen = `color: #03A9F4`;\nexport const fontColorWhite = `color: white`;\nexport const subtleBoxShadow = `box-shadow: 0px 0px 5px 1px ${lightTheme ? '#a9b6ff' : '#121d5b'}`;\nexport const greenBoxShadow = `box-shadow: 0px 0px 4px 2px #5fff17`;\nexport const redBoxShadow = `box-shadow: 0px 0px 2px 2px #e41111`;\n\nexport const fontSizeBig = 'font-size: 2em';\nexport const fontSize1 = 'font-size: 1.5em;';\nexport const fontSize2 = 'font-size: 1.0em';\nexport const fontSize3 = 'font-size: .75em';\n\nexport const textAlignCenter = 'text-align: center;';","import React from 'react';\nimport styled from 'styled-components';\nimport { AppContext } from '../App/AppProvider';\nimport { fontSize1, greenBoxShadow, color3 } from '../Shared/Styles';\n\nconst ConfirmButtonStyled = styled.div`\n    margin: 20px;\n    color: ${color3};\n    ${fontSize1}\n    padding: 5px\n    cursor: pointer;\n    &:hover {\n        ${greenBoxShadow}\n    }\n`;\n\nexport const CenterDiv = styled.div`\n    display: grid;\n    justify-content: center;\n`;\n\nexport default function ConfirmButton() {\n    return (\n        <AppContext.Consumer>\n            {({ confirmFavorites }) => (\n                <CenterDiv>\n                    <ConfirmButtonStyled onClick={confirmFavorites}>\n                        Confirm Favorites\n                    </ConfirmButtonStyled>\n                </CenterDiv>\n            )}\n        </AppContext.Consumer>\n    );\n}\n","import React from 'react';\nimport { AppContext } from '../App/AppProvider';\n\nexport default function ({ firstVisit }) {\n    return (\n        <AppContext.Consumer>\n            {({ firstVisit }) =>\n                firstVisit ? (\n                    <div>Welcome to CryptoDash, please select you favorite coins to begin.{''}</div>\n                ) : null\n            }\n        </AppContext.Consumer>\n    );\n}\n","import React from 'react';\nimport { AppContext } from '../App/AppProvider';\n\nexport default function Page({ name, children }) {\n    return (\n        <AppContext.Consumer>\n            {({ page }) => {\n                if (page !== name) {\n                    return null;\n                }\n                return <div>{children}</div>;\n            }}\n        </AppContext.Consumer>\n    );\n}\n","import styled from 'styled-components';\nimport {\n    subtleBoxShadow,\n    greenBoxShadow,\n    lightBlueBackground,\n    redBoxShadow\n} from './Styles';\n\nexport const Tile = styled.div`\n    ${subtleBoxShadow};\n    ${lightBlueBackground};\n    padding: 10px;\n`;\n\nexport const SelectableTile = styled(Tile)`\n    &:hover {\n        cursor: pointer;\n        ${greenBoxShadow};\n    }\n`;\n\nexport const DeletableTile = styled(SelectableTile)`\n    &:hover{\n        cursor: pointer;\n        ${redBoxShadow}\n    }\n`;\n\nexport const DisabledTile = styled(Tile)`\n    pointer-events: none;\n    opacity: 0.4;\n`;","import React from 'react';\nimport styled from 'styled-components';\nimport { DeletableTile } from '../Shared/Tile';\n\nexport const CoinHeaderGridStyled = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n`;\n\nexport const CoinSymbol = styled.div`\n    justify-self: right;\n`;\n\nconst DeleteIcon = styled.div`\n    justify-self: right;\n    display: none;\n    ${DeletableTile}:hover & {\n        display: block;\n        color: red;\n    }\n`;\n\nexport default function CoinHeaderGrid({ name, symbol, topSection }) {\n    return (\n        <CoinHeaderGridStyled>\n            <div>{name}</div>\n            {topSection ? <DeleteIcon>X</DeleteIcon> : <CoinSymbol> {symbol} </CoinSymbol>}\n        </CoinHeaderGridStyled>\n    );\n}\n","import React from 'react';\nimport styled, { css } from 'styled-components';\n\nconst CoinImage = styled.img`\n    height: 50px;\n    ${(props) =>\n        props.spotlight &&\n        css`\n            height: 200px;\n            margin: auto;\n            display: block;\n        `}\n`;\n\nexport default function ({ coin, spotlight }) {\n    return (\n        <CoinImage\n            spotlight={spotlight}\n            alt={coin.CoinSymbol}\n            src={`https://cryptocompare.com/${coin.ImageUrl}`}\n        />\n    );\n}\n","import React from 'react';\nimport { AppContext } from '../App/AppProvider';\nimport { SelectableTile, DisabledTile, DeletableTile } from '../Shared/Tile';\nimport CoinHeaderGrid from './CoinHeaderGrid';\nimport CoinImage from '../Shared/CoinImage';\n\nfunction clickCoinHandler(topSection, coinKey, addCoin, removeCoin) {\n    return topSection\n        ? () => {\n              removeCoin(coinKey);\n          }\n        : () => {\n              addCoin(coinKey);\n          };\n}\n\nexport default function CoinTile({ coinKey, topSection }) {\n    return (\n        <AppContext.Consumer>\n            {({ coinList, addCoin, removeCoin, isInFavorites }) => {\n                const coin = coinList[coinKey];\n                let TileClass = SelectableTile;\n                if (topSection) {\n                    TileClass = DeletableTile;\n                } else if (isInFavorites(coinKey)) {\n                    TileClass = DisabledTile;\n                }\n                return (\n                    <TileClass onClick={clickCoinHandler(topSection, coinKey, addCoin, removeCoin)}>\n                        <CoinHeaderGrid\n                            topSection={topSection}\n                            name={coin.CoinName}\n                            symbol={coin.Symbol}\n                        />\n                        <CoinImage coin={coin} />\n                    </TileClass>\n                );\n            }}\n        </AppContext.Consumer>\n    );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { AppContext } from '../App/AppProvider';\nimport CoinTile from './CoinTile';\n\nexport const CoinGridStyled = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(130px, 1fr));\n    grid-gap: 15px;\n    margin-top: 40px;\n`;\n\nfunction getLowerSectionCoins(filteredCoins, coinList) {\n    return (filteredCoins && Object.keys(filteredCoins)) || Object.keys(coinList).slice(0, 100);\n}\n\nfunction getCoinsToDisplay(coinList, topSection, favorites, filteredCoins) {\n    return topSection ? favorites : getLowerSectionCoins(filteredCoins, coinList);\n}\n\nexport default function CoinGrid({ topSection }) {\n    return (\n        <AppContext.Consumer>\n            {({ coinList, favorites, filteredCoins }) => (\n                <CoinGridStyled>\n                    {getCoinsToDisplay(coinList, topSection, favorites, filteredCoins).map(\n                        (coinKey) => (\n                            <CoinTile key={coinKey} topSection={topSection} coinKey={coinKey}>\n                                {coinKey}\n                            </CoinTile>\n                        )\n                    )}\n                </CoinGridStyled>\n            )}\n        </AppContext.Consumer>\n    );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport _ from 'lodash';\nimport fuzzy from 'fuzzy';\nimport { backgroundColor2, fontSize2 } from '../Shared/Styles';\nimport { AppContext } from '../App/AppProvider';\n\nconst SearchGrid = styled.div`\n    display: grid;\n    grid-template-columns: 200px 1fr;\n`;\n\nconst SearchInput = styled.input`\n    ${backgroundColor2};\n    ${fontSize2};\n    border: 1px solid;\n    height: 25px;\n    color: #1163c9;\n    place-self: center left;\n`;\n\nconst handleFilter = _.debounce((inputValue, coinList, setFilteredCoins) => {\n    // Get all coin symbols\n    let coinSymbols = Object.keys(coinList);\n    // Get all the coin names, map symbol to name\n    let coinNames = coinSymbols.map((sym) => coinList[sym].CoinName);\n    let allStringsToSearch = coinSymbols.concat(coinNames);\n    let fuzzyResults = fuzzy\n        .filter(inputValue, allStringsToSearch, {})\n        .map((result) => result.string);\n\n    const filteredCoins = _.pickBy(coinList, (result, symKey) => {\n        const coinName = result.CoinName;\n        return _.includes(fuzzyResults, symKey) || _.includes(fuzzyResults, coinName);\n    });\n\n    setFilteredCoins(filteredCoins);\n}, 500);\n\nfunction filterCoins(e, setFilteredCoins, coinList) {\n    let inputValue = e.target.value;\n    if (!inputValue) {\n        setFilteredCoins(null);\n        return;\n    }\n    handleFilter(inputValue, coinList, setFilteredCoins);\n}\n\nexport default function Search() {\n    return (\n        <AppContext.Consumer>\n            {({ setFilteredCoins, coinList }) => (\n                <SearchGrid>\n                    <h2>Search all Coins</h2>\n                    <SearchInput onKeyUp={(e) => filterCoins(e, setFilteredCoins, coinList)} />\n                </SearchGrid>\n            )}\n        </AppContext.Consumer>\n    );\n}\n","import React from 'react';\nimport { AppContext } from '../App/AppProvider';\nimport './ThemeToggle.css';\n\nexport default function ThemeToggle() {\n    return (\n        <AppContext.Consumer>\n            {({ changeTheme, theme }) => (\n                <div>\n                    <div className='theme-title'>Theme Toggle</div>\n                    <label className='switch'>\n                        <input\n                            type='checkbox'\n                            onClick={changeTheme}\n                            defaultChecked={theme === 'dark'}\n                        />\n                        <span className='slider'></span>\n                    </label>\n                </div>\n            )}\n        </AppContext.Consumer>\n    );\n}\n","import React from 'react';\nimport ConfirmButton from './ConfirmButton';\nimport WelcomeMessage from './WelcomeMessage';\nimport Page from '../Shared/Page';\nimport CoinGrid from './CoinGrid';\nimport Search from './Search';\nimport ThemeToggle from './ThemeToggle';\n\nexport default function () {\n    return (\n        <Page name='Settings'>\n            <WelcomeMessage />\n            <ThemeToggle />\n            <CoinGrid topSection />\n            <ConfirmButton />\n            <Search />\n            <CoinGrid />\n        </Page>\n    )\n}\n","import React from 'react';\nimport { AppContext } from '../App/AppProvider';\n\nexport default function Content(props) {\n    return (\n        <AppContext.Consumer>\n            {({ coinList, prices, firstVisit }) => {\n                if (!coinList) return <div>Loading Coins</div>;\n                if (!firstVisit && !prices) return <div>Loading prices</div>;\n                return <div>{props.children}</div>;\n            }}\n        </AppContext.Consumer>\n    );\n}\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { fontSize3, fontSizeBig, greenBoxShadow } from '../Shared/Styles';\nimport { SelectableTile } from '../Shared/Tile';\nimport { CoinHeaderGridStyled } from '../Settings/CoinHeaderGrid';\nimport { AppContext } from '../App/AppProvider';\n\nconst JustifyRight = styled.div`\n    justify-self: right;\n`;\n\nconst JustifyLeft = styled.div`\n    justify-self: left;\n`;\n\nconst TickerPrice = styled.div`\n    ${fontSizeBig};\n`;\n\nconst ChangePct = styled.div`\n    color: green;\n    ${(props) =>\n        props.red &&\n        css`\n            color: red;\n        `}\n`;\n\nconst numberFormat = (number) => {\n    return +(number + '').slice(0, 7);\n};\n\nconst PriceTileStyled = styled(SelectableTile)`\n    ${(props) =>\n        props.compact &&\n        css`\n            display: grid;\n            ${fontSize3};\n            grid-gap: 5px;\n            grid-template-columns: repeat(3, 1fr);\n            justify-items: right;\n        `}\n\n    ${(props) =>\n        props.currentFavorite &&\n        css`\n            ${greenBoxShadow};\n            pointer-events: none;\n        `}\n`;\n\nfunction ChangePercentage({ data }) {\n    return (\n        <JustifyRight>\n            <ChangePct red={data.CHANGEPCT24HOUR < 0}>\n                {numberFormat(data.CHANGEPCT24HOUR)}%\n            </ChangePct>\n        </JustifyRight>\n    );\n}\n\nfunction PriceTile({ sym, data, currentFavorite, setCurrentFavorite }) {\n    return (\n        <PriceTileStyled onClick={setCurrentFavorite} currentFavorite={currentFavorite}>\n            <CoinHeaderGridStyled>\n                <div>{sym}</div>\n                <ChangePercentage data={data} />\n            </CoinHeaderGridStyled>\n            <TickerPrice>${numberFormat(data.PRICE)}</TickerPrice>\n        </PriceTileStyled>\n    );\n}\n\nfunction PriceTileCompact({ sym, data, currentFavorite, setCurrentFavorite }) {\n    return (\n        <PriceTileStyled onClick={setCurrentFavorite} compact currentFavorite={currentFavorite}>\n            <JustifyLeft>{sym}</JustifyLeft>\n            <ChangePercentage data={data} />\n            <div>${numberFormat(data.PRICE)}</div>\n        </PriceTileStyled>\n    );\n}\n\nexport default function ({ price, index }) {\n    let sym = Object.keys(price)[0];\n    let data = price[sym]['USD'];\n    let TileClass = index < 5 ? PriceTile : PriceTileCompact;\n    return (\n        <AppContext.Consumer>\n            {({ currentFavorite, setCurrentFavorite }) => (\n                <TileClass\n                    sym={sym}\n                    data={data}\n                    currentFavorite={currentFavorite === sym}\n                    setCurrentFavorite={() => setCurrentFavorite(sym)}\n                >\n                    {sym} {data.PRICE}\n                </TileClass>\n            )}\n        </AppContext.Consumer>\n    );\n}\n","import React from 'react';\nimport { AppContext } from '../App/AppProvider';\nimport styled from 'styled-components';\nimport PriceTile from './PriceTile';\n\nconst PriceGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    grid-gap: 15px;\n    margin-top: 40px;\n`;\n\nexport default function () {\n    return (\n        <AppContext.Consumer>\n            {({ prices }) => (\n                <PriceGrid>\n                    {prices.map((price, index) => (\n                        <PriceTile key={Object.keys(price)} price={price} index={index} />\n                    ))}\n                </PriceGrid>\n            )}\n        </AppContext.Consumer>\n    );\n}\n","import React from 'react';\nimport { AppContext } from '../App/AppProvider';\nimport CoinImage from '../Shared/CoinImage';\nimport { Tile } from '../Shared/Tile';\nimport styled from 'styled-components';\n\nconst SpotlightName = styled.h2`\n    text-align: center;\n`;\n\nexport default function CoinSpotlight() {\n    return (\n        <AppContext.Consumer>\n            {({ currentFavorite, coinList }) => (\n                <Tile>\n                    <SpotlightName>{coinList[currentFavorite].CoinName}</SpotlightName>\n                    <CoinImage spotlight coin={coinList[currentFavorite]} />\n                </Tile>\n            )}\n        </AppContext.Consumer>\n    );\n}\n","export default function (historical) {\n    return {\n        title: {\n            text: ''\n        },\n\n        yAxis: {\n            title: {\n                text: 'Price'\n            }\n        },\n\n        xAxis: {\n            type: 'datetime'\n        },\n\n        legend: {\n            layout: 'vertical',\n            align: 'right',\n            verticalAlign: 'middle'\n        },\n\n        plotOptions: {\n            series: {\n                label: {\n                    connectorAllowed: false\n                },\n                pointStart: 2010\n            }\n        },\n\n        series: historical,\n\n        responsive: {\n            rules: [{\n                condition: {\n                    maxWidth: 500\n                },\n                chartOptions: {\n                    legend: {\n                        layout: 'horizontal',\n                        align: 'center',\n                        verticalAlign: 'bottom'\n                    }\n                }\n            }]\n        }\n    }\n};","import styled from 'styled-components';\nimport { backgroundColor2, fontSize2 } from '../Shared/Styles';\n\n\nexport default styled.select`\n    ${backgroundColor2};\n    ${fontSize2};\n    color: #1163c9;\n    border: 1px solid;\n    margin: 5px;\n    float: right;\n`;","import {lightTheme} from \"../Shared/Styles\";\n\nexport default {\n  colors: [\n    '#61d936',\n    '#552ccb',\n    '#1163c9',\n    '#04A1EE',\n    '#08C6E0',\n    '#146B9E',\n    '#F376C1',\n    '#1B2839'\n  ],\n  chart: {\n    backgroundColor: lightTheme ? 'white' : '#061a44',\n    borderColor: '#000000',\n    borderWidth: 0,\n    className: 'dark-container',\n    plotBackgroundColor: lightTheme ? 'white' : '#061a44',\n    plotBorderWidth: 0\n  },\n  title: {\n    style: {\n      color: '#C0C0C0',\n      font: 'bold 16px \"Trebuchet MS\", Verdana, sans-serif'\n    }\n  },\n  subtitle: {\n    style: {\n      color: '#666666',\n      font: 'bold 12px \"Trebuchet MS\", Verdana, sans-serif'\n    }\n  },\n  xAxis: {\n    gridLineColor: '#333333',\n    gridLineWidth: 0,\n    labels: {\n      style: {\n        color: '#A0A0A0'\n      }\n    },\n    lineColor: '#A0A0A0',\n    tickColor: '#A0A0A0',\n    title: {\n      style: {\n        color: '#CCC',\n        fontWeight: 'bold',\n        fontSize: '12px',\n        fontFamily: 'Trebuchet MS, Verdana, sans-serif'\n\n      }\n    }\n  },\n  yAxis: {\n    gridLineWidth: 0,\n    gridLineColor: '#333333',\n    labels: {\n      style: {\n        color: '#A0A0A0'\n      }\n    },\n    lineColor: '#A0A0A0',\n    minorTickInterval: null,\n    tickColor: '#A0A0A0',\n    tickWidth: 1,\n    title: {\n      style: {\n        color: '#CCC',\n        fontWeight: 'bold',\n        fontSize: '12px',\n        fontFamily: 'Trebuchet MS, Verdana, sans-serif'\n      }\n    }\n  },\n  tooltip: {\n    backgroundColor: 'rgba(0, 0, 0, 0.75)',\n    style: {\n      color: '#F0F0F0'\n    }\n  },\n  toolbar: {\n    itemStyle: {\n      color: 'silver'\n    }\n  },\n  plotOptions: {\n    line: {\n      dataLabels: {\n        color: '#CCC'\n      },\n      marker: {\n        lineColor: '#333'\n      }\n    },\n    spline: {\n      marker: {\n        lineColor: '#333'\n      }\n    },\n    scatter: {\n      marker: {\n        lineColor: '#333'\n      }\n    },\n    candlestick: {\n      lineColor: 'white'\n    }\n  },\n  legend: {\n    itemStyle: {\n      font: '9pt Trebuchet MS, Verdana, sans-serif',\n      color: '#A0A0A0'\n    },\n    itemHoverStyle: {\n      color: '#FFF'\n    },\n    itemHiddenStyle: {\n      color: '#444'\n    }\n  },\n  credits: {\n    enabled: false\n  },\n  labels: {\n    style: {\n      color: '#CCC'\n    }\n  },\n\n  navigation: {\n    buttonOptions: {\n      symbolStroke: '#DDDDDD',\n      hoverSymbolStroke: '#FFFFFF',\n      theme: {\n        fill: {\n          linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n          stops: [\n            [0.4, '#606060'],\n            [0.6, '#333333']\n          ]\n        },\n        stroke: '#000000'\n      }\n    }\n  },\n\n  // scroll charts\n  rangeSelector: {\n    buttonTheme: {\n      fill: {\n        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n        stops: [\n          [0.4, '#888'],\n          [0.6, '#555']\n        ]\n      },\n      stroke: '#000000',\n      style: {\n        color: '#CCC',\n        fontWeight: 'bold'\n      },\n      states: {\n        hover: {\n          fill: {\n            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n            stops: [\n              [0.4, '#BBB'],\n              [0.6, '#888']\n            ]\n          },\n          stroke: '#000000',\n          style: {\n            color: 'white'\n          }\n        },\n        select: {\n          fill: {\n            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n            stops: [\n              [0.1, '#000'],\n              [0.3, '#333']\n            ]\n          },\n          stroke: '#000000',\n          style: {\n            color: 'yellow'\n          }\n        }\n      }\n    },\n    inputStyle: {\n      backgroundColor: '#333',\n      color: 'silver'\n    },\n    labelStyle: {\n      color: 'silver'\n    }\n  },\n\n  navigator: {\n    handles: {\n      backgroundColor: '#666',\n      borderColor: '#AAA'\n    },\n    outlineColor: '#CCC',\n    maskFill: 'rgba(16, 16, 16, 0.5)',\n    series: {\n      color: '#7798BF',\n      lineColor: '#A6C7ED'\n    }\n  },\n\n  scrollbar: {\n    barBackgroundColor: {\n      linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n      stops: [\n        [0.4, '#888'],\n        [0.6, '#555']\n      ]\n    },\n    barBorderColor: '#CCC',\n    buttonArrowColor: '#CCC',\n    buttonBackgroundColor: {\n      linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n      stops: [\n        [0.4, '#888'],\n        [0.6, '#555']\n      ]\n    },\n    buttonBorderColor: '#CCC',\n    rifleColor: '#FFF',\n    trackBackgroundColor: {\n      linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n      stops: [\n        [0, '#000'],\n        [1, '#333']\n      ]\n    },\n    trackBorderColor: '#666'\n  },\n\n  // special colors for some of the\n  legendBackgroundColor: 'rgba(0, 0, 0, 0.5)',\n  background2: 'rgb(35, 35, 70)',\n  dataLabelsColor: '#444',\n  textColor: '#C0C0C0',\n  maskColor: 'rgba(255,255,255,0.3)'\n};\n","import highchartsConfig from './HighchartsConfig';\nimport React from 'react';\nimport { Tile } from '../Shared/Tile';\nimport { AppContext } from '../App/AppProvider';\nimport ReactHighcharts from 'react-highcharts';\nimport ChartSelect from './ChartSelect';\nimport HighchartsTheme from './HighchartsTheme';\nReactHighcharts.Highcharts.setOptions(HighchartsTheme);\n\nexport default function PriceChart() {\n    return (\n        <AppContext.Consumer>\n            {({ historical, changeChartSelect }) => (\n                <Tile>\n                    <ChartSelect\n                        defaultValue={'months'}\n                        onChange={(e) => changeChartSelect(e.target.value)}\n                    >\n                        <option value='days'>Days</option>\n                        <option value='weeks'>Weeks</option>\n                        <option value='months'>Months</option>\n                    </ChartSelect>\n                    {historical ? (\n                        <ReactHighcharts config={highchartsConfig(historical)} />\n                    ) : (\n                        <div>Loading historical data</div>\n                    )}\n                </Tile>\n            )}\n        </AppContext.Consumer>\n    );\n}\n","import React from 'react';\nimport Page from '../Shared/Page';\nimport PriceGrid from './PriceGrid';\nimport CoinSpotlight from './CoinSpotlight';\nimport styled from 'styled-components';\nimport PriceChart from './PriceChart';\n\nconst ChartGrid = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    margin-top: 20px;\n    grid-gap: 15px;\n`;\n\nexport default function () {\n    return (\n        <Page name='Dashboard'>\n            <PriceGrid />\n            <ChartGrid>\n                <CoinSpotlight />\n                <PriceChart />\n            </ChartGrid>\n        </Page>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport AppLayout from './AppLayout';\nimport AppBar from './AppBar';\nimport { AppProvider } from './AppProvider';\nimport Settings from '../Settings';\nimport Content from '../Shared/Content';\nimport Dashboard from '../Dashboard';\n\nfunction App() {\n  return (\n    <AppLayout>\n      <AppProvider>\n        <AppBar />\n        <Content>\n          <Settings />\n          <Dashboard />\n        </Content>\n      </AppProvider>\n    </AppLayout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}